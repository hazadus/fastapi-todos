x-postgres-base: &postgres-base
  image: postgres:16
  restart: always
  healthcheck:
    test:
      - CMD-SHELL
      - pg_isready -U postgres
    interval: 10s
    timeout: 5s
    retries: 5

services:
  # MARK: DEV
  app-dev:
    container_name: app-dev
    profiles: ["dev"]
    build:
      context: ./backend
      args:
        ENV: dev
    env_file: "./backend/.env.dev"
    command: ["uvicorn", "app.main:app", "--reload", "--host", "0.0.0.0", "--port", "8000"]
    ports:
      - 8000:8000
    volumes:
      - ./backend/app/:/app/app/
      - ./backend/migrations/versions/:/app/migrations/versions/
    depends_on:
      postgres-dev:
        condition: service_healthy
    networks:
      - dev

  front-dev:
    container_name: front-dev
    profiles: ["dev"]
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    env_file: "./frontend/.env.dev"
    command: ["npm", "run", "dev"]
    ports:
      - 3000:3000
    volumes:
      - ./frontend/src/:/app/src/
      - ./frontend/public/:/app/public/
    networks:
      - dev

  postgres-dev:
    profiles: ["dev"]
    <<: *postgres-base
    container_name: postgres-dev
    env_file: "./backend/.env.dev"
    environment:
      - POSTGRES_HOST=postgres-dev
    ports:
      - 5432:5432
    volumes:
      - ./data/postgres/:/var/lib/postgresql/data
    networks:
      - dev

  nginx-dev:
    container_name: nginx-dev
    image: nginx:alpine
    profiles: ["dev"]
    ports:
      - 80:80
    volumes:
      - ./docker/nginx/nginx.dev.conf:/etc/nginx/nginx.conf:ro
    networks:
      - dev
    depends_on:
      - app-dev
      - front-dev

  # MARK: TEST
  app-test:
    profiles: ["test"]
    build:
      context: ./backend
      args:
        ENV: test
    env_file: "./backend/.env.test"
    command: sh -c "
      alembic upgrade head &&
      coverage run --source='.' -m pytest -s --rootdir=/app/ --disable-pytest-warnings &&
      coverage html -d /htmlcov"
    volumes:
      - ./backend/htmlcov:/htmlcov
    depends_on:
      - postgres-test
    networks:
      - test

  postgres-test:
    profiles: ["test"]
    <<: *postgres-base
    env_file: "./backend/.env.test"
    networks:
      - test

#MARK: Networks
networks:
  dev:
  test: